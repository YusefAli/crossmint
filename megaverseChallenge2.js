const axios = require('axios');

const mapData = {
    "goal": [
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "RIGHT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "UP_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "WHITE_SOLOON",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "BLUE_SOLOON",
        "POLYANET",
        "POLYANET",
        "PURPLE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "RIGHT_COMETH"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "WHITE_SOLOON",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "DOWN_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "BLUE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "RED_SOLOON",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "PURPLE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "WHITE_SOLOON",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "BLUE_SOLOON",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "PURPLE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "RED_SOLOON",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "UP_COMETH",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "UP_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "PURPLE_SOLOON",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "BLUE_SOLOON",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE",
        "DOWN_COMETH",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "RIGHT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "WHITE_SOLOON",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "BLUE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "WHITE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "RIGHT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "DOWN_COMETH",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "BLUE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "BLUE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "PURPLE_SOLOON",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "UP_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "PURPLE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "RED_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "WHITE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "RIGHT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "RED_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "WHITE_SOLOON",
        "POLYANET",
        "POLYANET",
        "PURPLE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "RED_SOLOON",
        "POLYANET",
        "POLYANET",
        "BLUE_SOLOON",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "POLYANET",
        "RED_SOLOON",
        "SPACE",
        "SPACE",
        "DOWN_COMETH",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "UP_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "POLYANET",
        "POLYANET",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "DOWN_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "DOWN_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "UP_COMETH",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "RIGHT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "LEFT_COMETH",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ],
      [
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE",
        "SPACE"
      ]
    ]
  };

  const candidateId = '5cce11b9-33d6-460d-9f22-bcae6947c0b9';  // Replace with your actual candidateId

// Function to post a POLYANET, SOLOON, or COMETH with retry functionality
async function postEntity(type, row, column, additionalData = {}, retries = 10, delay = 1000) {
  const baseUrl = 'https://challenge.crossmint.io/api';

  const entityTypes = {
    POLYANET: '/polyanets',
    SOLOON: '/soloons',
    COMETH: '/comeths'
  };

  const url = `${baseUrl}${entityTypes[type]}`;
  const data = {
    row,
    column,
    candidateId,
    ...additionalData
  };

  for (let attempt = 1; attempt <= retries; attempt++) {
    try {
      const response = await axios.post(url, data, {
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.status === 200) {
        console.log(`Successfully created ${type} at row ${row}, column ${column}`);
        return;
      } else {
        throw new Error(`Error creating ${type} at row ${row}, column ${column}: ${response.statusText}`);
      }
    } catch (error) {
      console.error(`Attempt ${attempt} failed: ${error.message}`);

      if (attempt < retries) {
        console.log(`Retrying in ${delay / 1000} seconds...`);
        await new Promise(resolve => setTimeout(resolve, delay)); // Wait before retrying
      } else {
        console.error(`Failed to create ${type} at row ${row}, column ${column} after ${retries} attempts.`);
      }
    }
  }
}

// Function to interpret the goal map and post the appropriate entities
async function buildMegaverse(goalMap) {
  for (let row = 0; row < goalMap.length; row++) {
    for (let column = 0; column < goalMap[row].length; column++) {
      const entity = goalMap[row][column];

      switch (entity) {
        case 'POLYANET':
          await postEntity('POLYANET', row, column);
          break;
        case 'WHITE_SOLOON':
        case 'BLUE_SOLOON':
        case 'PURPLE_SOLOON':
        case 'RED_SOLOON':
          await postEntity('SOLOON', row, column, { color: entity.split('_')[0].toLowerCase() });
          break;
        case 'UP_COMETH':
        case 'DOWN_COMETH':
        case 'LEFT_COMETH':
        case 'RIGHT_COMETH':
          await postEntity('COMETH', row, column, { direction: entity.split('_')[0].toLowerCase() });
          break;
        default:
          // Ignore SPACE and other unrecognized entities
          break;
      }
    }
  }
}


// Call the function with the map data
buildMegaverse(mapData.goal);
